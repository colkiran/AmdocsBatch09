Python
------
3.11.x

3.9.7
-----

flavours of python
------------------
Cpython		-	currently using

Jython 		-	python code to Java

Iron Python - Dotnet libraries 


www.python.org			-	3.11.x

Pycharm	Community Edition -	intellij - https://www.jetbrains.com/pycharm/download/#section=windows


Editor
------
pycharm CE

vscode CE

sublime text

Eclipse

jupyter - ML

notepad++	


Scripting Tool									Programming Language
--------------									---------------------
python, perl, ruby							C, C++

1. interpreted									1. compiled


2. weakly typed data						2. strongly typed data

implicit decleration						explicit decleration
--------------------						--------------------
a = 10											int i
													 i = 10

a = 'hello'


a = True

---------------------------------------------------------------
Python installed
----------------
1. SDK - libraries necessary to execute a python file

2. Shell - interactive environment

3. IDLE - Integrated Development Environment



Operator overloaded
-------------------

+ 	=> add number, concatenate strings

*  => multiply numbers, print string n number of times


2.x
----
Numbers
	a. integer
	b. long			- depricated 3.x
	c. float
	d. complex


module 		- imp

function 	- reload

from imp import reload -> 

reload()



Coding Rules
------------
#!  -  shebang 	-	used to specify the path of python executable


Indentation
-----------

def fun():
	
	print("Hello World")

	print("This is function fun code...")

	for i in range(1, 10):
		
		print("For loop code")
		
		if i % 2 == 0;
		
			print("if condition code")	
			print(i)


print("__main__ code")


Comments
--------

# is used for comments - single line comments


String are stored in

"  "  or  '  '  - single line string

"This is the first line"
'This is the second line'


multiple lines are stored in  """  """ or  '''   '''


"""
This is the first line.

This is the second line.

This is the third line.

"""


document strings
----------------
written on top of the function - will be displayed when help is executed on it


Primitive Datatypes in Python
-----------------------------

1. Numbers
	a. integers
	b. float
	c. complex


2. Strings

3. Boolean


0b1100100  => 100
  56  2		=> 32 + 64 + 4	 => 100


bitwise
-------
or
--
5 = 101
3 = 011
	 ---
    111		=> 7
	
and
---
5 = 101
3 = 011
    ---
    001	  => 1

XOR
---
5 = 101
3 = 011
    ---	
    110		=> 6

<<
--
5 = 101  => 1010		=> 10

8 = 1000 => 10000   => 16

5 = 101 => 10100	   => 20

>>
--
16 = 10000 => 1000 => 8

5 = 101 => 10	=>	2


Control Structures
------------------
if condition

Loops
-----
1. for loop
2. while


for loop is similar to foreach, which depends on a collection

collection is generated by range function

range(1, 10)		=> starts from 1 and goes upto < 10

range(1, 11) =>  1, 2, 3....10

range(1, 15, 2) => 1, 3, 5, 7, 9, 11, 13 

range(10, 1, -1)


print
-----
print(data, sep="", end="\n")


while loops
-----------

while condition -> true:

























